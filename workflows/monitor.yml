name: Website Monitor

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes (UTC)
    - cron: "0 20 * * *"     # once daily at 20:00 UTC
  workflow_dispatch:          # allow manual runs

jobs:
  monitor:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Prepare folders
        run: |
          mkdir -p pdf_changes logs state

      - name: Select which command to run
        id: decide
        run: |
          if [ "${{ github.event_name }}" = "schedule" ] && [ "${{ github.event.schedule }}" = "0 20 * * *" ]; then
            echo "cmd=--daily-summary" >> $GITHUB_OUTPUT
          else
            echo "cmd=--check" >> $GITHUB_OUTPUT
          fi

      - name: Run monitor script
        run: |
          python monitor.py ${{ steps.decide.outputs.cmd }}
        env:
          MONITOR_URL: ${{ secrets.MONITOR_URL }}
          MONITOR_CSS_SELECTOR: ${{ secrets.MONITOR_CSS_SELECTOR }}
          MONITOR_REGEX_CAPTURE: ${{ secrets.MONITOR_REGEX_CAPTURE }}
          MONITOR_TIMEOUT_SEC: "30"
          MONITOR_STATE_FILE: "state/monitor_state.json"
          MONITOR_PDF_DIR: "pdf_changes"
          MONITOR_LOG_DIR: "logs"

          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          MAIL_TO: ${{ secrets.MAIL_TO }}
          MAIL_SUBJECT_PREFIX: "[Monitor]"

      - name: Upload artifacts (PDFs & logs)
        uses: actions/upload-artifact@v4
        with:
          name: monitor-artifacts
          path: |
            pdf_changes/**
            logs/**
          if-no-files-found: ignore
